{"version":3,"sources":["components/MySelect.jsx","components/Form.jsx","middlewares/Api.js","components/Rows.jsx","components/Table.jsx","components/Error.jsx","components/Paging.jsx","App.js","index.js","components/MyInput.module.css"],"names":["MySelect","React","forwardRef","ref","items","props","console","log","className","classes","select","map","item","index","disabled","option","value","text","Form","useState","columnName","setColumnName","operatorSelectRef","useRef","filterValue","setValue","id","onChange","e","target","type","event","onClick","preventDefault","setFilter","operator","current","tableFilterParams","filter","sort","direction","pagination","currentPage","perPage","setPage","params","updateView","fetch","method","headers","body","JSON","stringify","then","res","status","json","Rows","date","name","quantity","distance","Table","setSort","dataset","scope","href","data","Error","Paging","lastPage","total","pageItems","from","to","i","push","Pagination","Item","active","changePage","Math","floor","pagesArr","setPagination","First","Prev","Ellipsis","Next","Last","App","filterResult","setFilterResult","errorText","setErrorText","getData","results","isNaN","useEffect","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e57e0cd9.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport classes from './MyInput.module.css';\n\n\nconst MySelect = React.forwardRef(\n    ({items, ...props},ref) => {\n\n    console.log(items)\n        return (\n            <select ref={ref} className={classes.select} {...props}>\n                {\n                    items.map((item,index) =>\n                        <option disabled={item.disabled} key={index} className={classes.option} value={item.value}>\n                            {item.text}\n                        </option>    \n                    )\n                }\n            </select>\n        )\n    }\n\n)\nexport default MySelect;\n","import React, {useState, useRef} from 'react';\nimport './Form.css';\nimport MySelect from './MySelect';\n\nconst Form = function (props) {\n    const [columnName, setColumnName] = useState('');\n    //const [operator, setOperator] = useState('');\n    let operatorSelectRef = useRef();\n    const [filterValue, setValue] = useState('');\n\n\n    function formSubmit(event) {\n        event.preventDefault();\n        if (columnName && operatorSelectRef && filterValue) {\n            props.setFilter({\n                    columnName: columnName,\n                    operator: operatorSelectRef.current.value,\n                    filterValue: filterValue\n            })\n\n        }\n    }\n\n    function filterValueSet(event) {\n        setValue(event.target.value);\n    }\n\n    return (\n        <form id=\"filterForm\" className=\"form\">\n            {/* Управляемый компонент */}\n            <MySelect\n                onChange={e => setColumnName(e.target.value)}\n                items={[\n                    {value: \"0\", text: \"Столбец\", disabled: true},\n                    {value: \"date\", text: \"Дата\", disabled: false},\n                    {value: \"name\", text: \"Название\", disabled: false},\n                    {value: \"quantity\", text: \"Количество\", disabled: false},\n                    {value: \"distance\", text: \"Расстояние\", disabled: false}\n\n                ]}\n            />\n            {/* НЕуправляемый компонент */}\n            <MySelect\n                items={[\n                    {value: \"0\", text: \"Оператор\", disabled: true},\n                    {value: \"=\", text: \"равно\", disabled: false},\n                    {value: \"~\", text: \"содержит\", disabled: false},\n                    {value: \">\", text: \"больше\", disabled: false},\n                    {value: \"<\", text: \"меньше\", disabled: false}\n\n                ]}\n                ref = {operatorSelectRef}\n            />\n            <input id=\"filterValue\" className=\"form__column\" type=\"text\" onChange={filterValueSet}/>\n            <button onClick={formSubmit}>Поиск</button>\n            \n        </form>\n    )\n    \n    \n}\n\nexport default Form;","const tableFilterParams = {\n    filter: {\n        columnName: '',\n        operator: '',\n        filterValue: ''\n    },\n    sort: {\n        columnName: 'date',\n        direction: 'ASC'\n    },\n    pagination: {\n        currentPage: 1,\n        perPage: 10\n}\n}\n\n\nfunction setFilter(params) {\n    if (params) {tableFilterParams.filter = params} else {\n        tableFilterParams.filter = {\n            columnName: '',\n            operator: '',\n            filterValue: ''\n        }\n    };\n}\n\nfunction setSort(params) {\n    if (params) {\n        tableFilterParams.sort.columnName = params\n        if (tableFilterParams.sort.direction === 'ASC') {\n            tableFilterParams.sort.direction = 'DESC'\n        } else {\n            tableFilterParams.sort.direction = 'ASC'\n        };\n    } else {\n        tableFilterParams.sort = {\n            columnName: 'date',\n            direction: 'ASC'\n        }\n    };\n}\n\nfunction setPage(params) {\n    if (params) {\n        tableFilterParams.pagination.currentPage = params.currentPage\n        tableFilterParams.pagination.perPage = params.perPage\n    } else {\n        tableFilterParams.pagination = {\n            currentPage: 1,\n            perPage: 10\n        }\n    };\n}\n\nfunction updateView() {\n    console.log(tableFilterParams)\n    return sendQuery(tableFilterParams);\n}\n\nfunction sendQuery(params) {\n    return fetch(\"http://localhost:5000/\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': \"application/json\"\n        },\n        body: JSON.stringify(params)\n    })\n    .then(res => {\n        if (res.status === 200) {\n            return res.json();\n        } else {\n            return res.status;\n        }\n    })\n}\n\nexport {setFilter, setSort, setPage, updateView, tableFilterParams};","import React from 'react';\nfunction Rows({date, name, quantity, distance}) {\n    return ( \n        <tbody>\n            <tr>\n            <td>{date}</td>\n            <td>{name}</td>\n            <td>{quantity}</td>\n            <td>{distance}</td>\n            </tr>\n        </tbody>\n    );\n  }\n  \n  export default Rows;","import React from 'react';\nimport Rows from './Rows';\n\nconst Table = function (props) {\n\n    function setSort(e) {\n        console.log(e.target.dataset.name)\n        props.setSort(e.target.dataset.name)\n    }\n\n    return (\n        <table className=\"table table-bordered\">\n            <thead>\n                <tr>\n                <th scope=\"col\"><a href=\"#\" onClick={setSort} data-name=\"date\">Дата</a></th>\n                <th scope=\"col\"><a href=\"#\" onClick={setSort} data-name=\"name\">Название</a></th>\n                <th scope=\"col\"><a href=\"#\" onClick={setSort} data-name=\"quantity\">Количество</a></th>\n                <th scope=\"col\"><a href=\"#\" onClick={setSort} data-name=\"distance\">Расстояние</a></th>\n                </tr>\n            </thead>\n                {props.data && props.data.map(item =>(\n                    < Rows \n                        key={item.id}\n                        date={item.date} \n                        name={item.name} \n                        quantity={item.quantity}\n                        distance={item.distance}\n                    />\n                ))}\n        </table>\n\n            )\n    \n    \n}\n\nexport default Table;","import React from 'react';\n\nconst Error = function (props) {\n    return (\n        <p>\n            {props.text}\n        </p>\n    )\n    \n    \n}\n\nexport default Error;","import React from 'react';\nimport Pagination from 'react-bootstrap/Pagination'\nimport './Paging.css';\n\n\nconst Paging = function (props) {\n\n    //let items = new Array(props.itemsCount)\n    //console.log(props.pagination)\n\n    let {currentPage, perPage, total, lastPage, from, to} = props.pagination\n    //let currentPage = props.pagination.currentPage;\n    //let itemsOnPage = props.pagination.perPage;\n    //let itemsOnPage = props.pagination.perPage;\n    //let pages = Math.floor(props.items.length/props.pagination.itemsOnPage);\n    // console.log(props.items.length)\n    // console.log(props.pagination.itemsOnPage)\n    // console.log(pages)\n    let pageItems = [];\n    let active = currentPage;\n    if (lastPage <= 5) {\n        for (let i=1; i<=lastPage;i++) {\n            pageItems.push(\n                <Pagination.Item key={i} active={currentPage === i} onClick={changePage}>\n                    {i}\n                </Pagination.Item>,\n            )\n        }\n    } else {\n        for (let i=Math.floor(lastPage/2)-2; i<=Math.floor(lastPage/2)+2;i++) {\n            pageItems.push(\n                <Pagination.Item key={i} active={currentPage === i} onClick={changePage}>\n                    {i}\n                </Pagination.Item>,\n            )\n        }\n\n    }\n\n    const pagesArr = [];\n    for (let i=1; i<=lastPage;i++) {\n        pagesArr.push(i)\n    }\n\n\n    function setPage(event) {\n        currentPage = event.target.value;\n        //console.log(total);\n        setPagination()\n    }\n\n    function changePage(e) {\n        currentPage = e.target.text;\n        console.log(e.target.text)\n        setPagination()\n    }\n\n    function setItemsOnPage(event) {\n        perPage = +event.target.value;\n        currentPage = 1;\n        //console.log(perPage)\n        setPagination()\n    }\n\n    function setPagination() {\n        props.setPage({\n            currentPage: currentPage,\n            perPage: perPage\n        })\n\n    }\n\n    return (\n        <div className=\"pagination\">\n            {/* <select id=\"page\" value={currentPage} onChange={setPage}>\n                {\n                    pagesArr.map((item) => <option key={item} value={item}>{item}</option>)\n                }\n            </select> */}\n            <div className=\"pagination-perpage\">\n            <p>Строк на страницу: </p>\n            <select id=\"itemsOnPage\" value={props.pagination.perPage} onChange={setItemsOnPage}>\n                <option value=\"3\">3</option>\n                <option value=\"5\">5</option>\n                <option value=\"10\">10</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n            </select>\n            </div>\n            <Pagination className=\"pagination-pagelist\">\n                <Pagination.First />\n                <Pagination.Prev />\n                <Pagination.Item onClick={changePage}>{1}</Pagination.Item>\n                <Pagination.Ellipsis />\n\n                {pageItems}\n\n                <Pagination.Ellipsis />\n                <Pagination.Item onClick={changePage}>{lastPage}</Pagination.Item>\n                <Pagination.Next />\n                <Pagination.Last />\n            </Pagination>\n        </div>\n    )\n}\n\nexport default Paging;","import './App.css';\nimport Form from './components/Form';\nimport { setFilter, setSort, setPage, updateView } from './middlewares/Api';\nimport Table from './components/Table';\nimport {useEffect, useState} from 'react';\nimport Error from './components/Error';\nimport Paging from './components/Paging';\n\n\nfunction App() {\n  const [filterResult, setFilterResult] = useState([]);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    perPage: 10,\n  });\n  const [errorText, setErrorText] = useState('');\n  useEffect(() => {\n    setPage(pagination);\n    getData();\n  },[]);\n\n  function getData() {\n    updateView()\n    .then((results) => {\n      console.log(results)\n      if (isNaN(results)){\n        setFilterResult(results.data);\n        setPagination({\n          currentPage: results.pagination.currentPage,\n          perPage: results.pagination.perPage,\n          total: results.pagination.total,\n          lastPage: results.pagination.lastPage,\n          from: results.pagination.from,\n          to: results.pagination.to          \n        })\n        setErrorText('');\n      } else {\n        //alert(results)\n        setErrorText(`Ошибка в комбинации параметров (error ${results})`);\n        setFilterResult([]);\n      }\n    })\n  }\n\n  function makeFilter(params) {\n    setFilter(params);\n    setPage({\n      currentPage: 1,\n      perPage: pagination.perPage,\n    })\n    getData();\n  }\n\n  function makeSort(params) {\n    setSort(params);\n    getData();\n  }\n\n  function makePage(params) {\n    //console.log(params)\n    setPage(params);\n    //setPagination(params);\n    getData();\n  }\n\n  return (\n      <div className=\"app\">\n        <Form \n          setFilter = {makeFilter}\n        />\n        <Error \n          text = {errorText}\n        />\n        <Table \n          data = {filterResult}\n          setSort = {makeSort}\n        />\n        <Paging\n          setPage = {makePage}\n          pagination = {pagination}\n        />\n      </div>\n      \n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"MyInput_select__3_9g7\",\"option\":\"MyInput_option__2yeFz\"};"],"sourceRoot":""}